"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Introduction","href":"/Getting Started/introduction","docId":"Getting Started/introduction"},{"type":"link","label":"Overview","href":"/Getting Started/overview","docId":"Getting Started/overview"},{"type":"link","label":"Quick Start Guide","href":"/Getting Started/quickstart","docId":"Getting Started/quickstart"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Rocket League","items":[{"type":"link","label":"Training an Agent","href":"/Rocket League/training_an_agent","docId":"Rocket League/training_an_agent"},{"type":"category","label":"Configuration Objects","items":[{"type":"link","label":"Action Parsers","href":"/Rocket League/Configuration Objects/action_parsers","docId":"Rocket League/Configuration Objects/action_parsers"},{"type":"link","label":"Done Conditions","href":"/Rocket League/Configuration Objects/done_conditions","docId":"Rocket League/Configuration Objects/done_conditions"},{"type":"link","label":"Observation Builders","href":"/Rocket League/Configuration Objects/observation_builders","docId":"Rocket League/Configuration Objects/observation_builders"},{"type":"link","label":"Renderers","href":"/Rocket League/Configuration Objects/renderers","docId":"Rocket League/Configuration Objects/renderers"},{"type":"link","label":"Reward Functions","href":"/Rocket League/Configuration Objects/reward_functions","docId":"Rocket League/Configuration Objects/reward_functions"},{"type":"link","label":"State Mutators","href":"/Rocket League/Configuration Objects/state_mutators","docId":"Rocket League/Configuration Objects/state_mutators"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Custom Environments","items":[{"type":"link","label":"Creating an Environment","href":"/Custom Environments/custom-environment","docId":"Custom Environments/custom-environment"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Cheatsheets","items":[{"type":"link","label":"List of Game Values","href":"/Cheatsheets/game_values","docId":"Cheatsheets/game_values"},{"type":"link","label":"Reinforcement Learning Background","href":"/Cheatsheets/reinforcement_learning_terms","docId":"Cheatsheets/reinforcement_learning_terms"}],"collapsed":true,"collapsible":true}]},"docs":{"Cheatsheets/game_values":{"id":"Cheatsheets/game_values","title":"List of Game Values","description":"All lengths are measured in Unreal Units (uu), equivalent to 1 centimeter.","sidebar":"tutorialSidebar"},"Cheatsheets/reinforcement_learning_terms":{"id":"Cheatsheets/reinforcement_learning_terms","title":"Reinforcement Learning Background","description":"What follows is a series of definitions that may be useful to understand the concepts of reinforcement learning that are used when training an agent in an RLGym environment. Note that these definitions are not meant to be exhaustive, and we will formulate the reinforcement learning setting in a somewhat non-standard way to better align with the environments typically considered by practitioners using RLGym.","sidebar":"tutorialSidebar"},"Custom Environments/custom-environment":{"id":"Custom Environments/custom-environment","title":"Creating an Environment","description":"This tutorial will show you how to create a simple grid world environment using the RLGym API. Every RLGym environment must implement the configuration objects specified in our RLGym overview. Let\'s take a look at the following example to see how each of the configuration objects can be implemented and used.","sidebar":"tutorialSidebar"},"Getting Started/introduction":{"id":"Getting Started/introduction","title":"Introduction","description":"What is RLGym?","sidebar":"tutorialSidebar"},"Getting Started/overview":{"id":"Getting Started/overview","title":"Overview","description":"RLGym is designed to make creating and modifying reinforcement learning environments as simple as possible. The RLGym API breaks down an environment into several components, which we refer to as \\"configuration objects\\". All a user needs to do to create their own environment is write a concrete implementation of the configuration objects they want to use, and RLGym will handle the rest. Our goal is to provide a clear path from asking the question \\"Is it possible to use reinforcement learning with this game?\\" to actually training an agent.","sidebar":"tutorialSidebar"},"Getting Started/quickstart":{"id":"Getting Started/quickstart","title":"Quick Start Guide","description":"In this guide we\'ll install RLGym with RocketSim and train a simple Rocket League bot with an algorithm from RLGym Learn. To train a bot, we will first set up an environment where it can play, then create a learner and start training. In this guide we\'ll use all the default settings, but you can experiment with different values to see how they affect your bot\'s performance.","sidebar":"tutorialSidebar"},"RLGym Learn/introduction":{"id":"RLGym Learn/introduction","title":"RLGym Learn","description":"This is an upcoming project that is not finished yet. It will be a generic framework for reinforcement learning algorithms that can be used with RLGym. When available, this webpage will be updated."},"RLGym Tools/introduction":{"id":"RLGym Tools/introduction","title":"RLGym Tools","description":"RLGym Tools is a collection of extra reward functions and environment wrappers that can be used with RLGym. An exhaustive list of the tools is beyond the scope of this article, but here are some highlights:"},"Rocket League/Configuration Objects/action_parsers":{"id":"Rocket League/Configuration Objects/action_parsers","title":"Action Parsers","description":"Action parsers define an interface that translates outputs from a policy into inputs that will be provided to the","sidebar":"tutorialSidebar"},"Rocket League/Configuration Objects/done_conditions":{"id":"Rocket League/Configuration Objects/done_conditions","title":"Done Conditions","description":"A DoneCondition determines when an episode should end. In RLGym v2, a done condition can signal either a terminal state (natural episode end) or a truncated state (early termination). The RocketSim transition engine handles checking these conditions and setting the appropriate flags in the environment step.","sidebar":"tutorialSidebar"},"Rocket League/Configuration Objects/observation_builders":{"id":"Rocket League/Configuration Objects/observation_builders","title":"Observation Builders","description":"An ObsBuilder is an object used by RLGym to transform a GameState from the transition engine into inputs for each","sidebar":"tutorialSidebar"},"Rocket League/Configuration Objects/renderers":{"id":"Rocket League/Configuration Objects/renderers","title":"Renderers","description":"RLGym v2 provides a way to visualize the game state during training or evaluation through the Renderer interface. The renderer is responsible for displaying the current state of the game, including car positions, ball position, boost pads, and other game elements.","sidebar":"tutorialSidebar"},"Rocket League/Configuration Objects/reward_functions":{"id":"Rocket League/Configuration Objects/reward_functions","title":"Reward Functions","description":"A RewardFunction is an object used by an RLGym environment to compute the rewards for each agent every step.","sidebar":"tutorialSidebar"},"Rocket League/Configuration Objects/state_mutators":{"id":"Rocket League/Configuration Objects/state_mutators","title":"State Mutators","description":"Before anything happens in the environment, there must be an initial state. RLGym v2 provides a way for users to construct and modify this state via StateMutator objects. If more than one StateMutator is provided, they can be combined using MutatorSequence, which will apply them in sequence, each modifying the current contents of the state.","sidebar":"tutorialSidebar"},"Rocket League/training_an_agent":{"id":"Rocket League/training_an_agent","title":"Training an Agent","description":"This guide will walk you through training a Rocket League bot using RLGym and the PPOLearner from RLGym Learn. We\'ll use RocketSim to avoid running the actual game, and cover the essential concepts you need to understand. We\'ll be jumping off from the end of our Quick Start Guide, so make sure you\'ve read that first.","sidebar":"tutorialSidebar"}}}')}}]);