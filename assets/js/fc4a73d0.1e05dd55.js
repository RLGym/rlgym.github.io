"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[501],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(n),p=o,f=m["".concat(c,".").concat(p)]||m[p]||d[p]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7962:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(4137));const i={title:"Overview",sidebar_position:2},a="Overview of RLGym",s={unversionedId:"Getting Started/overview",id:"Getting Started/overview",title:"Overview",description:'RLGym breaks down a reinforcement learning environment into a set of components, which we call "configuration objects." Every environment is defined by a set of these objects, and the RLGym API handles the flow of information between them to present a consistent interface for an agent to interact with. To create a new environment, users just need to implement each of the configuration objects described below and pass them to the RLGym constructor.',source:"@site/docs/Getting Started/overview.md",sourceDirName:"Getting Started",slug:"/Getting Started/overview",permalink:"/Getting Started/overview",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Overview",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/Getting Started/introduction"},next:{title:"Quick Start Guide",permalink:"/Getting Started/quickstart"}},c={},l=[{value:"Configuration Objects",id:"configuration-objects",level:2}],u={toc:l},m="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview-of-rlgym"},"Overview of RLGym"),(0,o.kt)("p",null,'RLGym breaks down a reinforcement learning environment into a set of components, which we call "configuration objects." Every environment is defined by a set of these objects, and the RLGym API handles the flow of information between them to present a consistent interface for an agent to interact with. To create a new environment, users just need to implement each of the configuration objects described below and pass them to the ',(0,o.kt)("inlineCode",{parentName:"p"},"RLGym")," constructor."),(0,o.kt)("h2",{id:"configuration-objects"},"Configuration Objects"),(0,o.kt)("p",null,"There are a total of 6 required configuration objects, and an optional renderer. They are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("inlineCode",{parentName:"li"},"TransitionEngine"),": Handles how the environment changes from one state to another"),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("inlineCode",{parentName:"li"},"StateMutator"),": Controls how the environment gets reset or modified"),(0,o.kt)("li",{parentName:"ul"},"An ",(0,o.kt)("inlineCode",{parentName:"li"},"ObsBuilder"),": Turns the environment state into agent observations"),(0,o.kt)("li",{parentName:"ul"},"An ",(0,o.kt)("inlineCode",{parentName:"li"},"ActionParser"),": Defines what actions agents can take"),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("inlineCode",{parentName:"li"},"RewardFunction"),": Determines what rewards agents receive"),(0,o.kt)("li",{parentName:"ul"},"One or more ",(0,o.kt)("inlineCode",{parentName:"li"},"DoneConditions"),": Decide when episodes should be terminated (natural end) or truncated (early stop)"),(0,o.kt)("li",{parentName:"ul"},"Optionally a ",(0,o.kt)("inlineCode",{parentName:"li"},"Renderer"),": Shows you what's happening in the environment")),(0,o.kt)("p",null,"The diagram below shows the interaction between these components:"),(0,o.kt)("mermaid",{value:"%%{\n  init: {\n    'theme': 'base',\n    'themeVariables': {\n      'primaryColor': '#6f48c0',\n      'primaryTextColor': '#fff',\n      'primaryBorderColor': '#5d2c84',\n      'lineColor': '#808080',\n      'secondaryColor': '#8d8d8d',\n      'tertiaryColor': '#fff'\n    },\n    'flowchart': { 'curve': 'bump' }\n  }\n}%%\nflowchart TB\n    A[StateMutators] --\x3e|Initial State| B[Transition Engine]\n    B --\x3e|Game State| C[Renderer]\n    B --\x3e D{{Agents, Next State, Shared Info}}\n    D --\x3e E[ObsBuilder]\n    D --\x3e F[RewardFunction]\n    D --\x3e G[TerminalConditions]\n    D --\x3e H[TruncationConditions]\n    E --\x3e|Observation| I[Learning Agent] \n    F --\x3e|Reward| I\n    G --\x3e|Terminated| I\n    H --\x3e|Truncated| I\n    I --\x3e|Action| J[ActionParser]\n    J --\x3e|Engine Controls| B"}),(0,o.kt)("p",null,"To see an example of a concrete implementation of these configuration objects, see our ",(0,o.kt)("a",{parentName:"p",href:"../../Custom%20Environments/custom-environment"},"Custom Environment")," guide, or check out the individual examples relevant to Rocket League in our ",(0,o.kt)("a",{parentName:"p",href:"../../Rocket%20League/Configuration%20Objects/action_parsers"},"Rocket League")," section."))}d.isMDXComponent=!0}}]);